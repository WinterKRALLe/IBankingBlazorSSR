@page "/Settings"

@using IBankingBlazorSSR.Application.Abstraction
@using IBankingBlazorSSR.Application.ViewModels

@inject IUserService UserService

<div
    role="tablist"
    aria-label="tabs"
    class="flex lg:gap-10 relative w-full text-skin-base2 h-12 justify-around md:justify-start items-center overflow-hidden transition p-1 border-b border-[#25283a]">
    <div class="absolute indicator h-10 my-auto top-0 bottom-0 left-0 border-b-2 border-gray-400"></div>
    <button
        role="tab"
        aria-selected="true"
        aria-controls="panel-1"
        id="tab-1"
        tabindex="0"
        class="relative block h-10 px-6 tab rounded-full text-skin-base transition">
        <span class="">Osobní údaje</span>
    </button>
</div>
<div class="mt-6 relative">
    <div
        role="tabpanel"
        id="panel-1"
        class="tab-panel flex flex-col transition duration-300 lg:ml-16 lg:mt-8 gap-8 lg:gap-16">
        <div>
            <h1 class="text-2xl font-bold ml-2">Účet a heslo</h1>
            <EditForm Model="@InputProfile" class="flex flex-col p-4 gap-4" FormName="Profile" OnValidSubmit="@ChangeUserInfoAsync">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="name">Jméno</label>
                    <InputText @bind-Value="InputProfile.Name" class="input" id="name"/>
                </div>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="surname">Příjmení</label>
                    <InputText @bind-Value="InputProfile.SurName" class="input" id="surname"/>
                </div>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="email">Email</label>
                    <InputText @bind-Value="InputProfile.Email" class="input" id="email"/>
                </div>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="address">Bydliště</label>
                    <InputText @bind-Value="InputProfile.Address" class="input" id="address"/>
                </div>
                <button type="submit" class="sm:ml-32 text-sm w-fit button border border-[#454a61] bg-skin-button_accent hover:bg-skin-button_accent_hover">
                    Potvrdit změny
                </button>
            </EditForm>
        </div>
        <div>
            <h1 class="text-2xl font-bold ml-2">Zabezpečení</h1>
            <div class="flex flex-col sm:flex-row sm:items-center">
                <EditForm FormName="PhoneNumber" Model="InputPhone" OnValidSubmit="@ChangePhoneAsync" method="post" class="p-4">
                    <label class="font-bold inline-block w-32" for="phone">Telefon</label>
                    <InputText @bind-Value="InputPhone.PhoneNumber" class="bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" id="phone"/>
                    <button type="submit" class="sm:ml-12 mt-4 sm:mt-0 text-sm w-fit button border border-[#454a61] bg-skin-button_accent hover:bg-skin-button_accent_hover">
                        Uložit telefon
                    </button>
                </EditForm>
            </div>

            <div class="flex flex-col sm:flex-row sm:items-center px-4 pt-2">
                <label class="font-bold inline-block w-32">Heslo</label>
                <button type="button" class="button text-sm border border-[#454a61] hover:bg-black whitespace-nowrap w-fit show-modal">Změnit heslo</button>
            </div>
            <dialog class="hidden modal flex fixed h-full w-full top-0 left-0 right-0 bottom-0 bg-skin-alpha_background justify-center items-center z-50 text-skin-base">
                <div class="flex flex-col justify-center bg-skin-fill p-4 rounded-lg w-full md:w-fit h-full md:h-fit">
                    <div class="flex justify-between items-center">
                        <h1 class="text-xl">Změnit heslo</h1>
                        <button class="p-2 hover:bg-skin-inverted rounded-lg close-modal">
                            <svg class="fill-skin-base2" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256">
                                <path d="M205.66,194.34a8,8,0,0,1-11.32,11.32L128,139.31,61.66,205.66a8,8,0,0,1-11.32-11.32L116.69,128,50.34,61.66A8,8,0,0,1,61.66,50.34L128,116.69l66.34-66.35a8,8,0,0,1,11.32,11.32L139.31,128Z"></path>
                            </svg>
                        </button>
                    </div>
                    <EditForm Model="@InputChgPasswd" FormName="change-password" OnValidSubmit="@ChangeUserPasswordAsync" class="flex flex-col gap-4 mt-4">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                    
                        <div class="flex flex-col sm:flex-row sm:items-center">
                            <label for="current-password" class="font-bold inline-block w-52">Aktuální heslo</label>
                            <InputText @bind-Value="InputChgPasswd.CurrentPassword" class="w-full max-w-sm bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" type="password" id="current-password" />
                            <ValidationMessage For="@(() => InputChgPasswd.CurrentPassword)" />
                        </div>
                    
                        <div class="flex flex-col sm:flex-row sm:items-center">
                            <label for="new-password" class="font-bold inline-block w-52">Nové heslo</label>
                            <InputText @bind-Value="InputChgPasswd.NewPassword" class="w-full max-w-sm bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" type="password" id="new-password" />
                            <ValidationMessage For="@(() => InputChgPasswd.NewPassword)" />
                        </div>
                    
                        <div class="flex flex-col sm:flex-row sm:items-center">
                            <label for="confirm-password" class="font-bold inline-block w-52">Potvrdit heslo</label>
                            <InputText @bind-Value="InputChgPasswd.ConfirmPassword" class="w-full max-w-sm bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" type="password" id="confirm-password" />
                            <ValidationMessage For="@(() => InputChgPasswd.ConfirmPassword)" />
                        </div>
                    
                        <div class="flex items-center justify-between">
                            <button class="button border border-[#454a61] hover:bg-black close-modal" type="button">Zrušit</button>
                            <button class="button bg-skin-button_accent hover:bg-skin-button_accent_hover" type="submit">Potvrdit</button>
                        </div>
                    </EditForm>

                </div>
            </dialog>
        </div>
    </div>
</div>

<script>
  const body = document.querySelector('body');
  const modal = document.querySelector('.modal');
  const showModalButton = document.querySelector('.show-modal');
  const closeModalButton = document.querySelectorAll('.close-modal');

  showModalButton.addEventListener('click', () => {
    modal.classList.remove('hidden');
    body.classList.add('overflow-hidden');
  });

  closeModalButton.forEach((e) => {
      e.addEventListener("click", () => {
          modal.classList.add('hidden');
          body.classList.remove('overflow-hidden');
      })
  })
</script>

@code {
    [SupplyParameterFromForm] private ProfileViewModel InputProfile { get; set; } = new();
    [SupplyParameterFromForm] private PhoneViewModel InputPhone { get; set; } = new();
    [SupplyParameterFromForm] private ChangePasswordViewModel InputChgPasswd { get; set; } = new();

    private ProfileData ProfileData { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        InputProfile ??= new();
        InputPhone ??= new();
        InputChgPasswd ??= new();

        ProfileData = await UserService.PopulateUserSettingsAsync();

        InputProfile.Name ??= ProfileData.ProfileModel.Name;
        InputProfile.SurName ??= ProfileData.ProfileModel.SurName;
        InputProfile.Email ??= ProfileData.ProfileModel.Email;
        InputProfile.Address ??= ProfileData.ProfileModel.Address;

        InputPhone.PhoneNumber ??= ProfileData.PhoneModel.PhoneNumber;
    }

    private async Task ChangePhoneAsync()
    {
        await UserService.ChangePhoneAsync(InputPhone);
    }

    private async Task ChangeUserInfoAsync()
    {
        await UserService.ChangeUserInfoAsync(InputProfile);
    }

    private async Task ChangeUserPasswordAsync()
    {
        await UserService.ChangeUserPasswordAsync(InputChgPasswd);
    }

}