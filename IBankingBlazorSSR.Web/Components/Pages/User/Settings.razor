@page "/Settings"

@using IBankingBlazorSSR.Infrastructure.Identity
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using IBankingBlazorSSR.Domain.Entities

@inject IJSRuntime JSRuntime;
@inject UserAccessor UserAccessor;
@inject UserManager<ApplicationUser> UserManager;
@inject SignInManager<ApplicationUser> SignInManager;

<div
    role="tablist"
    aria-label="tabs"
    class="flex lg:gap-10 relative w-full text-skin-base2 h-12 justify-around md:justify-start items-center overflow-hidden transition p-1 border-b border-[#25283a]">
    <div class="absolute indicator h-10 my-auto top-0 bottom-0 left-0 border-b-2 border-gray-400"></div>
    <button
        role="tab"
        aria-selected="true"
        aria-controls="panel-1"
        id="tab-1"
        tabindex="0"
        class="relative block h-10 px-6 tab rounded-full text-skin-base transition">
        <span class="">Osobní údaje</span>
    </button>
    <button
        role="tab"
        aria-selected="false"
        aria-controls="panel-2"
        id="tab-2"
        tabindex="-1"
        class="relative block h-10 px-6 tab rounded-full text-skin-base2 transition">
        <span class="tab-text ">Motiv</span>
    </button>

</div>
<div class="mt-6 relative">
    <div
        role="tabpanel"
        id="panel-1"
        class="tab-panel flex flex-col transition duration-300 lg:ml-16 lg:mt-8 gap-8 lg:gap-16">
        <div>
            <h1 class="text-2xl font-bold">Účet a heslo</h1>
            <EditForm Model="@InputProfile" class="flex flex-col p-4 gap-4" FormName="Profile" OnValidSubmit="@ChangeUserInfoAsync">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="name">Jméno</label>
                    <InputText @bind-Value="InputProfile.Name" class="w-full max-w-sm bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" id="name"/>
                </div>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="surname">Příjmení</label>
                    <InputText @bind-Value="InputProfile.SurName" class="w-full max-w-sm bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" id="surname"/>
                </div>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="email">Email</label>
                    <InputText @bind-Value="InputProfile.Email" class="w-full max-w-sm bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" id="email"/>
                </div>
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <label class="font-bold inline-block w-32" for="address">Bydliště</label>
                    <InputText @bind-Value="InputProfile.Address" class="w-full max-w-sm bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" id="address"/>
                </div>
                <button type="submit" class="sm:ml-32 text-sm w-fit button border border-[#454a61] bg-skin-button_accent hover:bg-skin-button_accent_hover">
                    Potvrdit změny
                </button>
            </EditForm>
        </div>
        <div>
            <h1 class="text-2xl font-bold">Zabezpečení</h1>
            <div class="flex flex-col sm:flex-row sm:items-center">
                <label class="font-bold inline-block w-32">Heslo</label>
                <button type="button" class="button border border-[#454a61] hover:bg-black whitespace-nowrap w-fit" @onclick="ToggleModal">Změnit heslo</button>
            </div>
            <div class="flex flex-col sm:flex-row sm:items-center">
                <EditForm FormName="PhoneNumber" Model="@InputPhone" OnValidSubmit="@ChangePhoneAsync" method="post">
                    <label class="font-bold inline-block w-32" for="phone">Telefon</label>
                    <InputText @bind-Value="InputPhone.PhoneNumber" class="bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" id="phone"/>
                    <button type="submit" class="sm:ml-12 mt-4 sm:mt-0 text-sm w-fit button border border-[#454a61] bg-skin-button_accent hover:bg-skin-button_accent_hover">
                        Uložit telefon
                    </button>
                </EditForm>
            </div>
        </div>
    </div>

    <div
        role="tabpanel"
        id="panel-2"
        class="absolute top-0 invisible opacity-0 tab-panel p-6 transition duration-300">
        <h2 class="text-xl font-semibold text-gray-800">Third tab panel</h2>
        <p class="mt-4 text-gray-600">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quas dolores voluptate temporibus, atque ab eos, delectus at ad hic voluptatem veritatis iure, nulla voluptates quod nobis doloremque eaque! Perferendis, soluta.</p>
    </div>
</div>

@if (_showModal)
{
    <dialog class="fixed h-full w-full top-0 left-0 right-0 bottom-0 bg-skin-alpha_background flex justify-center items-center z-50 text-skin-base">
        <div class="w-96 h-60 flex flex-col justify-between bg-skin-fill p-4 rounded-lg">
            <div class="flex justify-between items-center">
                <h1 class="text-xl">Zadejte své heslo</h1>
                <button class="p-2 hover:bg-skin-inverted rounded-lg" @onclick="ToggleModal">
                    <svg class="fill-skin-base2" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256">
                        <path d="M205.66,194.34a8,8,0,0,1-11.32,11.32L128,139.31,61.66,205.66a8,8,0,0,1-11.32-11.32L116.69,128,50.34,61.66A8,8,0,0,1,61.66,50.34L128,116.69l66.34-66.35a8,8,0,0,1,11.32,11.32L139.31,128Z"></path>
                    </svg>
                </button>
            </div>
            @* <form class="flex flex-col"> *@
            <label for="auth" class="">Heslo</label>
            <input class="bg-transparent focus:outline-none border border-solid border-[#454a61] rounded-lg px-4 py-2 text-sm" type="password" name="password" id="auth"/>
            @* </form> *@
            <div class="flex items-center justify-between">
                <button class="button border border-[#454a61] hover:bg-black" type="button" @onclick="ToggleModal">Zrušit</button>
                <button class="button bg-skin-button_accent hover:bg-skin-button_accent_hover" type="submit">Ověřit</button>
            </div>
        </div>
    </dialog>
}

@code {
    private bool _showModal;

    private void ToggleModal()
    {
        _showModal = !_showModal;
    }

    private ApplicationUser _user = default!;
    private string? _phoneNumber;

    [SupplyParameterFromForm] private InputProfileModel InputProfile { get; set; } = default!;
    [SupplyParameterFromForm] private InputPhoneModel InputPhone { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        InputProfile ??= new();
        InputPhone ??= new();

        _user = await UserAccessor.GetRequiredUserAsync();

        _phoneNumber = await UserManager.GetPhoneNumberAsync(_user);

        InputProfile.Name ??= _user.Name;
        InputProfile.SurName ??= _user.SurName;
        InputProfile.Email ??= _user.Email;
        InputProfile.Address ??= _user.Address;
        InputPhone.PhoneNumber ??= _phoneNumber;
    }

    private async Task ChangePhoneAsync()
    {
        if (InputPhone.PhoneNumber != _phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(_user, InputPhone.PhoneNumber);
            if (setPhoneResult.Succeeded)
            {
                await SignInManager.RefreshSignInAsync(_user);
            }
        }

        await SignInManager.RefreshSignInAsync(_user);
    }

    private async Task ChangeUserInfoAsync()
    {
        _user.Name = InputProfile.Name;
        _user.SurName = InputProfile.SurName;
        _user.Email = InputProfile.Email;
        _user.Address = InputProfile.Address;

        var result = await UserManager.UpdateAsync(_user);

        if (result.Succeeded)
        {
            await SignInManager.RefreshSignInAsync(_user);
        }
    }

    private class InputProfileModel
    {
        public string? Name { get; set; }
        public string? SurName { get; set; }
        public string? Email { get; set; }
        public string? Address { get; set; }
    }

    private class InputPhoneModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }

}